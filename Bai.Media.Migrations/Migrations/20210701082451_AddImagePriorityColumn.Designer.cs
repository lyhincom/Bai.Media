// <auto-generated />
using System;
using Bai.Media.DAL.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Bai.Media.Migrations.Migrations
{
    [DbContext(typeof(MediaDbContext))]
    [Migration("20210701082451_AddImagePriorityColumn")]
    partial class AddImagePriorityColumn
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Bai.Media.DAL.Models.Avatar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UniqueIdentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime>("CreatedDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DateTime")
                        .HasDefaultValueSql("GetUtcDate()");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Bit")
                        .HasDefaultValue(false);

                    b.Property<Guid>("FileExtension")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<int>("FileSize")
                        .HasColumnType("Int");

                    b.Property<byte[]>("ImageBytes")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("UniqueIdentifier");

                    b.HasKey("Id")
                        .HasName("PK_Avatar_Id");

                    b.HasIndex("UserId")
                        .HasDatabaseName("IX_Avatar_Key");

                    b.HasIndex("UserId", "FileExtension", "FileSize", "CreatedDt", "Deleted")
                        .HasDatabaseName("IX_Avatar_QueryFields");

                    b.ToTable("Avatars", "dbo");
                });

            modelBuilder.Entity("Bai.Media.DAL.Models.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UniqueIdentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime>("CreatedDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DateTime")
                        .HasDefaultValueSql("GetUtcDate()");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Bit")
                        .HasDefaultValue(false);

                    b.Property<Guid>("FileExtension")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<int>("FileSize")
                        .HasColumnType("Int");

                    b.Property<byte[]>("ImageBytes")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<Guid?>("ImageGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PageId")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("PageType")
                        .IsRequired()
                        .HasColumnType("NVarChar(100)");

                    b.Property<int?>("Priority")
                        .HasColumnType("Int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("UniqueIdentifier");

                    b.HasKey("Id")
                        .HasName("PK_Image_Id");

                    b.HasIndex("UserId", "PageId", "PageType")
                        .HasDatabaseName("IX_Image_Key");

                    b.HasIndex("UserId", "PageId", "PageType", "ImageGroupId", "Priority")
                        .HasDatabaseName("IX_Image_ImageGroupPriority");

                    b.HasIndex("UserId", "PageId", "PageType", "FileExtension", "FileSize", "CreatedDt", "Deleted")
                        .HasDatabaseName("IX_Image_QueryFields");

                    b.ToTable("Image", "dbo");
                });

            modelBuilder.Entity("Bai.Media.DAL.Models.Logo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UniqueIdentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime>("CreatedDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DateTime")
                        .HasDefaultValueSql("GetUtcDate()");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Bit")
                        .HasDefaultValue(false);

                    b.Property<Guid>("FileExtension")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<int>("FileSize")
                        .HasColumnType("Int");

                    b.Property<byte[]>("ImageBytes")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<Guid>("PageId")
                        .HasColumnType("UniqueIdentifier");

                    b.HasKey("Id")
                        .HasName("PK_Logo_Id");

                    b.HasIndex("PageId")
                        .HasDatabaseName("IX_Logo_Key");

                    b.HasIndex("PageId", "FileExtension", "FileSize", "CreatedDt", "Deleted")
                        .HasDatabaseName("IX_Logo_QueryFields");

                    b.ToTable("Logo", "dbo");
                });
#pragma warning restore 612, 618
        }
    }
}
